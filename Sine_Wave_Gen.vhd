-- Generated by sine_wave_generator.c
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity Sine_Wave_Gen is
Port (
    M_AXIS_ACLK    : in STD_LOGIC; --- This should be 100000000 Hz
    M_AXIS_ARESETN : in STD_LOGIC;   --- negative asynch reset
    M_AXIS_tDATA   : out std_logic_vector(7 downto 0); --- ACTUAL_OUTPUT_SIGNAL_FREQUENCY : 20000 Hz
    M_AXIS_tVALID  : out std_logic
);
end Sine_Wave_Gen;

architecture Behavioral of Sine_Wave_Gen is

constant SIN_TABLE_Length          : integer := 100;
constant SIN_DATA_WIDTH            : integer := 8;
type SIN_TABLEType is array(0 to SIN_TABLE_Length-1) of integer;
constant SIN_TABLE : SIN_TABLEType :=(0,8,16,23,31,39,47,54,61,68,75,81,87,93,98,103,108,112,115,119,121,123,125,126,127,127,127,126,125,123,121,119,115,112,108,103,98,93,87,81,75,68,61,54,47,39,31,23,16,8,0,-8,-16,-23,-31,-39,-47,-54,-61,-68,-75,-81,-87,-93,-98,-103,-108,-112,-115,-119,-121,-123,-125,-126,-127,-127,-127,-126,-125,-123,-121,-119,-115,-112,-108,-103,-98,-93,-87,-81,-75,-68,-61,-54,-47,-39,-31,-23,-16,-8);
attribute ram_style : string;
attribute ram_style of SIN_TABLE : signal is "block";
signal indx_cycle                  : integer := 49;
signal sin_indx                    : unsigned(6 downto 0) := (others=>'0');
signal cnt                         : unsigned(31 downto 0) := (others=>'0');

begin
process(M_AXIS_ACLK)
begin
    if rising_edge(M_AXIS_ACLK) then
       if (M_AXIS_ARESETN='0') then    --- Asynch reset
           cnt             <= (others=>'0');
           sin_indx        <= (others=>'0');
           M_AXIS_tVALID   <= '0';
       else
           cnt             <= cnt+1;
           M_AXIS_tVALID   <= '0';
           if(cnt=indx_cycle)then
               cnt        <= (others=>'0');
               sin_indx   <= sin_indx+1;
               if(sin_indx=SIN_TABLE_Length-1) then
                   sin_indx       <= (others=>'0');
               end if;
               M_AXIS_tVALID  <= '1';
               M_AXIS_tDATA   <= std_logic_vector(to_signed(SIN_TABLE(to_integer(sin_indx)),SIN_DATA_WIDTH));
           end if;
       end if;
    end if;
end process;
end Behavioral;
