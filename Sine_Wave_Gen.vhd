-- Generated by sine_wave_generator.c
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity Sine_Wave_Gen is
generic (
    IP_INPUT_FREQUENCY         : integer := 100000000; --- in Hz
    OUTPUT_SIGNAL_FREQUENCY    : integer := 50;        --- in Hz, max = M_AXIS_ACLK/512, if you need more, make MAX_OUTPUT_SIGNAL_FRQ true
    MAX_OUTPUT_SIGNAL_FRQ      : boolean := false      --- true this if you need more than M_AXIS_ACLK/512 then you can achieve M_AXIS_ACLK/256
);
Port (
    M_AXIS_ACLK    : in STD_LOGIC;
    M_AXIS_ARESETN : in STD_LOGIC;   --- negative reset
    M_AXIS_tDATA   : out std_logic_vector(11 downto 0);
    M_AXIS_tVALID  : out std_logic
);
end Sine_Wave_Gen;

architecture Behavioral of Sine_Wave_Gen is
constant SIN_TABLE_Length       : integer := 256;
constant SIN_DATA_WIDTH         : integer := 12;
type SIN_TABLEType is array(0 to SIN_TABLE_Length-1) of integer;
constant SIN_TABLE : SIN_TABLEType :=(0,50,100,150,200,250,300,350,399,448,497,546,594,642,689,737,783,829,875,920,965,1009,1052,1095,1137,1179,1219,1259,1299,1337,1375,1412,1448,1483,1517,1550,1583,1614,1644,1674,1702,1730,1756,1781,1806,1829,1851,1872,1892,1910,1928,1944,1959,1973,1986,1998,2008,2017,2025,2032,2038,2042,2045,2047,2047,2047,2045,2042,2038,2032,2025,2017,2008,1998,1986,1973,1959,1944,1928,1910,1892,1872,1851,1829,1806,1781,1756,1730,1702,1674,1644,1614,1583,1550,1517,1483,1448,1412,1375,1337,1299,1259,1219,1179,1137,1095,1052,1009,965,920,875,829,783,737,689,642,594,546,497,448,399,350,300,250,200,150,100,50,0,-50,-100,-150,-200,-250,-300,-350,-399,-448,-497,-546,-594,-642,-689,-737,-783,-829,-875,-920,-965,-1009,-1052,-1095,-1137,-1179,-1219,-1259,-1299,-1337,-1375,-1412,-1448,-1483,-1517,-1550,-1583,-1614,-1644,-1674,-1702,-1730,-1756,-1781,-1806,-1829,-1851,-1872,-1892,-1910,-1928,-1944,-1959,-1973,-1986,-1998,-2008,-2017,-2025,-2032,-2038,-2042,-2045,-2047,-2047,-2047,-2045,-2042,-2038,-2032,-2025,-2017,-2008,-1998,-1986,-1973,-1959,-1944,-1928,-1910,-1892,-1872,-1851,-1829,-1806,-1781,-1756,-1730,-1702,-1674,-1644,-1614,-1583,-1550,-1517,-1483,-1448,-1412,-1375,-1337,-1299,-1259,-1219,-1179,-1137,-1095,-1052,-1009,-965,-920,-875,-829,-783,-737,-689,-642,-594,-546,-497,-448,-399,-350,-300,-250,-200,-150,-100,-50);

signal indx_cycle      : integer := IP_INPUT_FREQUENCY/OUTPUT_SIGNAL_FREQUENCY/SIN_TABLE_Length;
signal sin_indx        : unsigned(6 downto 0) := (others=>'0');
signal cnt             : unsigned(31 downto 0) := (others=>'0');

begin
indx_cycle  <= 0 when MAX_OUTPUT_SIGNAL_FRQ=true;
process(M_AXIS_ACLK)
begin
    if rising_edge(M_AXIS_ACLK) then
       if (M_AXIS_ARESETN='0') then    --- Asynch reset
           cnt         <= (others=>'0');
           sin_indx    <= (others=>'0');
       else
           cnt             <= cnt+1;
           M_AXIS_tVALID   <= '0';
           if(cnt=indx_cycle)then
               cnt        <= (others=>'0');
               sin_indx   <= sin_indx+1;
               if(sin_indx=SIN_TABLE_Length-1) then
                   sin_indx       <= (others=>'0');
               end if;
               M_AXIS_tVALID  <= '1';
               M_AXIS_tDATA   <= std_logic_vector(to_signed(SIN_TABLE(to_integer(sin_indx)),SIN_DATA_WIDTH));
           end if;
       end if;
    end if;
end process;
end Behavioral;
